@inject IRainSensorService rainSensorManager
<div class="row text-center">
    <div class="col-md-12">
        <div class="alert alert-primary" style="height:80px;" role="alert">
            <h5 class="mt-2"> Toplam Data Sayısı: <b> @dataCount</b> </h5>
        </div>
    </div>

    <div class="col-md-12">
        <div class="alert alert-primary" style="height:80px;" role="alert">
            <h5 class="mt-2"> Yağmurlu Data Sayısı : <b> @rainTrueDataCount</b> </h5>
        </div>
    </div>

    <div class="col-md-12">
        <div class="alert alert-primary" style="height:80px;" role="alert">
            <h5 class="mt-2"> Güneşli Data Sayısı : <b> @rainFalseDataCount</b> </h5>
        </div>
    </div>

    <div class="col-md-12">
        <div class="alert alert-primary" style="height:80px;" role="alert">
            <h5 class="mt-2">Güneşli Gün Oranı : <b> @falsePercentage</b> </h5>
        </div>
    </div>

    <div class="col-md-12">
        <div class="alert alert-primary" style="height:80px;" role="alert">
            <h5 class="mt-2"> Yağmurlu Gün Oranı : <b> @truePercentage</b> </h5>
        </div>
    </div>
</div>





@code {
    public List<RainSensor>? rainSensors { get; set; }
    int dataCount;
    int rainTrueDataCount;
    int rainFalseDataCount;

    double truePercentage;
    double falsePercentage;

    protected override void OnInitialized()
    {
        GetCount();
    }

    public async void GetCount()
    {
        rainSensors = await rainSensorManager.GetList();
        dataCount = rainSensors.Count();
        rainTrueDataCount = rainSensors.Where(x => x.isRain == 1).Count();
        rainFalseDataCount = rainSensors.Where(x => x.isRain != 1).Count();

        truePercentage = (double)rainTrueDataCount / dataCount * 100;
        falsePercentage = (double)rainFalseDataCount / dataCount * 100;
    }

}
