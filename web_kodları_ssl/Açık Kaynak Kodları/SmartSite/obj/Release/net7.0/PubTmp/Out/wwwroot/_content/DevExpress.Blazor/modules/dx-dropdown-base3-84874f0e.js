import{_ as e}from"./_tslib-6e8ca86b.js";import{i as o}from"./logicaltreehelper-15991dcb.js";import{f as n,g as t,h as r,i as s}from"./popup-99058cdb.js";import{E as i}from"./eventhelper-8570b930.js";import{C as l}from"./custom-events-helper-18f7786a.js";import{d}from"./constants-4c28185b.js";import{C as a}from"./css-classes-f3f8ed66.js";import{DxMaskedInputEditor as p}from"./masked-input-3eb5a8b4.js";import{s as D}from"./lit-element-b0a6fcba.js";import{e as h}from"./property-d3853089.js";class u extends Event{constructor(){super(u.eventName,{bubbles:!0,composed:!0,cancelable:!0})}}u.eventName=d+".opendropdown";class c extends Event{constructor(){super(c.eventName,{bubbles:!0,composed:!0,cancelable:!0})}}c.eventName=d+".closedropdown",l.register(u.eventName,(e=>e.detail)),l.register(c.eventName,(e=>e.detail));class w{constructor(e){this.boundOnDropDownElementChangedHandler=this.onDropDownElementChanged.bind(this),this.boundOnDropDownShownHandler=this.onDropDownShown.bind(this),this.boundOnDropDownClosedHandler=this.onDropDownClosed.bind(this),this.boundOnDropDownPortalElementsChangedHandler=this.onDropDownPortalElementsChanged.bind(this),this.control=e,this.dropDownPortal=null,this._dropDownElement=null,this._adaptiveDropDownElement=null}get dropDownElement(){return this._dropDownElement}get useMobileFocusBehaviour(){var e;return(null===(e=this._adaptiveDropDownElement)||void 0===e?void 0:e.adaptivityEnabled)||!1}onConnectedCallback(){this.ensureDropDownInfrastructure(),this.control.addEventListener(n.eventName,this.boundOnDropDownElementChangedHandler)}onDisconnectedCallback(){this.control.removeEventListener(n.eventName,this.boundOnDropDownElementChangedHandler),this.disposeDropDownInfrastructure()}onSlotChanged(e){this.disposeDropDownInfrastructure(),this.ensureDropDownInfrastructure()}getDropDownPortal(){if(!this.control.shadowRoot)return null;const e=this.control.shadowRoot.querySelector("slot");if(!e)return null;return e.assignedNodes().find((e=>o(e,(()=>["popup","addEventListener","removeEventListener"]))))}onDropDownElementChanged(e){i.getOriginalSource(e)===this.dropDownPortal&&(this.disposeDropDownElement(),this.ensureDropDownElement())}onDropDownShown(e){this.dropDownElement&&o(this.dropDownElement,(()=>["logicalParent"]))&&this.control.addLogicalChild(this.dropDownElement)}onDropDownClosed(e){this.dropDownElement&&o(this.dropDownElement,(()=>["logicalParent"]))&&this.control.removeLogicalChild(this.dropDownElement)}onDropDownPortalElementsChanged(e){this.ensureDropDownElement()}ensureDropDownInfrastructure(){var e;this.dropDownPortal=this.getDropDownPortal(),null===(e=this.dropDownPortal)||void 0===e||e.addEventListener(n.eventName,this.boundOnDropDownPortalElementsChangedHandler),this.ensureDropDownElement()}ensureDropDownElement(){var e,n,s;this.dropDownPortal&&(this._dropDownElement=null===(e=this.dropDownPortal)||void 0===e?void 0:e.popup,null===(n=this._dropDownElement)||void 0===n||n.addEventListener(t.eventName,this.boundOnDropDownShownHandler),null===(s=this._dropDownElement)||void 0===s||s.addEventListener(r.eventName,this.boundOnDropDownClosedHandler),this._dropDownElement&&o(this._dropDownElement,(()=>["adaptivityEnabled"]))&&(this._adaptiveDropDownElement=this._dropDownElement),this.control.ensureDropDownElement())}disposeDropDownInfrastructure(){var e;null===(e=this.dropDownPortal)||void 0===e||e.removeEventListener(n.eventName,this.boundOnDropDownPortalElementsChangedHandler),this.dropDownPortal=null,this._adaptiveDropDownElement=null,this.disposeDropDownElement()}disposeDropDownElement(){var e,o;null===(e=this._dropDownElement)||void 0===e||e.removeEventListener(t.eventName,this.boundOnDropDownShownHandler),null===(o=this._dropDownElement)||void 0===o||o.removeEventListener(r.eventName,this.boundOnDropDownClosedHandler),this._dropDownElement=null,this.control.disposeDropDownElement()}}class m{}m.DropDownButton=a.Prefix+"-edit-btn-dropdown";class v extends p{constructor(){super(),this.boundOnClickHandler=this.onClick.bind(this),this.isDropDownOpen=!1,this.dropDownButtonElement=null,this.dropDownHelper=new w(this)}get useMobileFocusBehaviour(){return this.dropDownHelper.useMobileFocusBehaviour}get dropDownElement(){return this.dropDownHelper.dropDownElement}get shouldProcessFocusOut(){return!0}connectedCallback(){super.connectedCallback(),this.dropDownHelper.onConnectedCallback(),this.addEventListener("click",this.boundOnClickHandler)}disconnectedCallback(){this.removeEventListener("click",this.boundOnClickHandler),this.dropDownHelper.onDisconnectedCallback(),super.disconnectedCallback()}onSlotChanged(e){super.onSlotChanged(e),this.dropDownHelper.onSlotChanged(e),this.dropDownButtonElement=this.querySelector(`.${m.DropDownButton}`),o(this.inputElement,(()=>["logicalParent"]))&&this.addLogicalChild(this.inputElement)}processKeyDown(e){return this.isDropDownOpen||this.processKeyDownServerCommand(e),super.processKeyDown(e)}processFocusOut(e){var o,n,t;const r=i.getEventSource(e);if(null===(o=this.dropDownElement)||void 0===o?void 0:o.contains(r))return;const s=null!==(n=e.relatedTarget)&&void 0!==n?n:document.activeElement;this.contains(s)||(null===(t=this.dropDownElement)||void 0===t?void 0:t.contains(s))||this.raiseFocusOut(this.fieldElementValue)}processFocusIn(){this.focused&&super.processFocusIn()}onClick(e){var o;if(i.containsInComposedPath(e,v.isDropDownButtonElement))return e.stopPropagation(),null===(o=this.inputElement)||void 0===o||o.focus(),void this.toggleDropDownVisibility()}canHandlePointerDown(e){return s.containsInComposedPath(e,this.dropDownButtonElement)||s.containsInComposedPath(e,this.inputElement)}processKeyDownServerCommand(e){return!!v.isToggleDropDownVisibilityKeyCommand(e)&&(this.toggleDropDownVisibility(),!0)}ensureDropDownElement(){}disposeDropDownElement(){}toggleDropDownVisibility(){this.dispatchEvent(this.isDropDownOpen?new c:new u)}static isToggleDropDownVisibilityKeyCommand(e){return(e.altKey||e.metaKey)&&("ArrowUp"===e.key||"ArrowDown"===e.key)}static isDropDownButtonElement(e){var o;return!!e&&(null===(o=e.classList)||void 0===o?void 0:o.contains(m.DropDownButton))}processCapturedKeyDownAsync(e,o){return this.processKeyDownServerCommand(e)?(e.preventDefault(),o.handled=!0,Promise.resolve()):super.processCapturedKeyDownAsync(e,o)}async processCapturedPointerDownAsync(e,o){return this.canHandlePointerDown(e)?(o.handled=!0,Promise.resolve()):super.processCapturedPointerDownAsync(e,o)}}v.shadowRootOptions={...D.shadowRootOptions,delegatesFocus:!0},e([h({type:Boolean,attribute:"is-dropdown-open"})],v.prototype,"isDropDownOpen",void 0);export{v as D};
